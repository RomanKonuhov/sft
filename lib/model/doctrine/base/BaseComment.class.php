<?php

/**
 * BaseComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $block_id
 * @property string $username
 * @property clob $content
 * @property boolean $visible
 * @property Block $Block
 * 
 * @method integer getId()       Returns the current record's "id" value
 * @method integer getBlockId()  Returns the current record's "block_id" value
 * @method string  getUsername() Returns the current record's "username" value
 * @method clob    getContent()  Returns the current record's "content" value
 * @method boolean getVisible()  Returns the current record's "visible" value
 * @method Block   getBlock()    Returns the current record's "Block" value
 * @method Comment setId()       Sets the current record's "id" value
 * @method Comment setBlockId()  Sets the current record's "block_id" value
 * @method Comment setUsername() Sets the current record's "username" value
 * @method Comment setContent()  Sets the current record's "content" value
 * @method Comment setVisible()  Sets the current record's "visible" value
 * @method Comment setBlock()    Sets the current record's "Block" value
 * 
 * @package    sft.loc
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseComment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('comment');
        $this->hasColumn('id', 'integer', 5, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 5,
             ));
        $this->hasColumn('block_id', 'integer', 5, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 5,
             ));
        $this->hasColumn('username', 'string', 255, array(
             'type' => 'string',
             'default' => 'Anonymous',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('content', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             'default' => '',
             ));
        $this->hasColumn('visible', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));

        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Block', array(
             'local' => 'block_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}