<?php

/**
 * BaseTextList
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $block_id
 * @property varchar $header
 * @property clob $description
 * @property clob $content
 * @property varchar $author
 * @property timestamp $date
 * @property varchar $thumb
 * @property boolean $visible
 * @property integer $s_order
 * @property clob $meta_keywords
 * @property clob $meta_description
 * @property boolean $meta_indexing
 * @property Block $Block
 * 
 * @method integer   getId()               Returns the current record's "id" value
 * @method integer   getBlockId()          Returns the current record's "block_id" value
 * @method varchar   getHeader()           Returns the current record's "header" value
 * @method clob      getDescription()      Returns the current record's "description" value
 * @method clob      getContent()          Returns the current record's "content" value
 * @method varchar   getAuthor()           Returns the current record's "author" value
 * @method timestamp getDate()             Returns the current record's "date" value
 * @method varchar   getThumb()            Returns the current record's "thumb" value
 * @method boolean   getVisible()          Returns the current record's "visible" value
 * @method integer   getSOrder()           Returns the current record's "s_order" value
 * @method clob      getMetaKeywords()     Returns the current record's "meta_keywords" value
 * @method clob      getMetaDescription()  Returns the current record's "meta_description" value
 * @method boolean   getMetaIndexing()     Returns the current record's "meta_indexing" value
 * @method Block     getBlock()            Returns the current record's "Block" value
 * @method TextList  setId()               Sets the current record's "id" value
 * @method TextList  setBlockId()          Sets the current record's "block_id" value
 * @method TextList  setHeader()           Sets the current record's "header" value
 * @method TextList  setDescription()      Sets the current record's "description" value
 * @method TextList  setContent()          Sets the current record's "content" value
 * @method TextList  setAuthor()           Sets the current record's "author" value
 * @method TextList  setDate()             Sets the current record's "date" value
 * @method TextList  setThumb()            Sets the current record's "thumb" value
 * @method TextList  setVisible()          Sets the current record's "visible" value
 * @method TextList  setSOrder()           Sets the current record's "s_order" value
 * @method TextList  setMetaKeywords()     Sets the current record's "meta_keywords" value
 * @method TextList  setMetaDescription()  Sets the current record's "meta_description" value
 * @method TextList  setMetaIndexing()     Sets the current record's "meta_indexing" value
 * @method TextList  setBlock()            Sets the current record's "Block" value
 * 
 * @package    sft.loc
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTextList extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('text_list');
        $this->hasColumn('id', 'integer', 5, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 5,
             ));
        $this->hasColumn('block_id', 'integer', 5, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 5,
             ));
        $this->hasColumn('header', 'varchar', 255, array(
             'type' => 'varchar',
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             'default' => '',
             ));
        $this->hasColumn('content', 'clob', null, array(
             'type' => 'clob',
             'default' => '',
             ));
        $this->hasColumn('author', 'varchar', 255, array(
             'type' => 'varchar',
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('thumb', 'varchar', null, array(
             'type' => 'varchar',
             'default' => '',
             ));
        $this->hasColumn('visible', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('s_order', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('meta_keywords', 'clob', null, array(
             'type' => 'clob',
             'default' => '',
             ));
        $this->hasColumn('meta_description', 'clob', null, array(
             'type' => 'clob',
             'default' => '',
             ));
        $this->hasColumn('meta_indexing', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));

        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Block', array(
             'local' => 'block_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}