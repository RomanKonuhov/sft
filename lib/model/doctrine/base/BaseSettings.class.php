<?php

/**
 * BaseSettings
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property varchar $header
 * @property varchar $var
 * @property varchar $value
 * @property boolean $checkbox
 * 
 * @method integer  getId()       Returns the current record's "id" value
 * @method varchar  getHeader()   Returns the current record's "header" value
 * @method varchar  getVar()      Returns the current record's "var" value
 * @method varchar  getValue()    Returns the current record's "value" value
 * @method boolean  getCheckbox() Returns the current record's "checkbox" value
 * @method Settings setId()       Sets the current record's "id" value
 * @method Settings setHeader()   Sets the current record's "header" value
 * @method Settings setVar()      Sets the current record's "var" value
 * @method Settings setValue()    Sets the current record's "value" value
 * @method Settings setCheckbox() Sets the current record's "checkbox" value
 * 
 * @package    sft.loc
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSettings extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('settings');
        $this->hasColumn('id', 'integer', 5, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 5,
             ));
        $this->hasColumn('header', 'varchar', 255, array(
             'type' => 'varchar',
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('var', 'varchar', 255, array(
             'type' => 'varchar',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('value', 'varchar', 255, array(
             'type' => 'varchar',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('checkbox', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));

        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}